/* Level 28: GraphQL & Advanced APIs Styles */

:root {
    --primary-color: #e10098;
    --secondary-color: #00d4aa;
    --accent-color: #667eea;
    --success-color: #4facfe;
    --warning-color: #ffd700;
    --error-color: #ff6b6b;
    --info-color: #667eea;
    --graphql-color: #e10098;
    --query-color: #00d4aa;
    --mutation-color: #ff6b6b;
    --subscription-color: #667eea;
    --api-color: #8b5cf6;
    --realtime-color: #4facfe;
    --background-color: #0a0a0a;
    --surface-color: #1a1a1a;
    --text-primary: #ffffff;
    --text-secondary: #b0b0b0;
    --border-color: #333333;
    --shadow-color: rgba(0, 0, 0, 0.3);
    --gradient-primary: linear-gradient(135deg, #e10098 0%, #00d4aa 100%);
    --gradient-secondary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    --gradient-accent: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    --graphql-gradient: linear-gradient(135deg, #e10098 0%, #00d4aa 50%, #667eea 100%);
    --api-gradient: linear-gradient(45deg, #e10098, #00d4aa, #667eea, #8b5cf6, #4facfe);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: var(--background-color);
    color: var(--text-primary);
    line-height: 1.6;
    overflow-x: hidden;
    position: relative;
}

/* GraphQL network animation background */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        radial-gradient(circle at 20% 80%, rgba(225, 0, 152, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(0, 212, 170, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(102, 126, 234, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 60% 80%, rgba(139, 92, 246, 0.1) 0%, transparent 50%);
    animation: graphqlFloat 45s ease-in-out infinite;
    z-index: -1;
}

@keyframes graphqlFloat {
    0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.7; }
    25% { transform: translateY(-30px) rotate(2deg); opacity: 0.9; }
    50% { transform: translateY(20px) rotate(-1deg); opacity: 0.8; }
    75% { transform: translateY(-25px) rotate(1deg); opacity: 0.9; }
}

.level-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 20px;
    min-height: 100vh;
    position: relative;
    z-index: 1;
}

/* Header Styles */
.level-header {
    background: var(--surface-color);
    border-radius: 15px;
    padding: 30px;
    margin-bottom: 30px;
    box-shadow: 0 10px 30px var(--shadow-color);
    border: 1px solid var(--border-color);
    position: relative;
    overflow: hidden;
}

.level-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: var(--graphql-gradient);
    animation: graphqlGradientShift 18s ease-in-out infinite;
}

@keyframes graphqlGradientShift {
    0%, 100% { background: var(--graphql-gradient); }
    50% { background: var(--gradient-accent); }
}

.level-info h1 {
    font-size: 2.5rem;
    margin-bottom: 15px;
    background: var(--graphql-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    display: flex;
    align-items: center;
    gap: 15px;
    position: relative;
}

.level-info h1::after {
    content: 'ðŸ”—';
    position: absolute;
    right: -50px;
    animation: graphqlPulse 3s ease-in-out infinite;
}

@keyframes graphqlPulse {
    0%, 100% { transform: scale(1); opacity: 0.7; }
    50% { transform: scale(1.3); opacity: 1; }
}

.level-info p {
    font-size: 1.2rem;
    color: var(--text-secondary);
    margin-bottom: 20px;
}

.level-stats {
    display: flex;
    gap: 30px;
    flex-wrap: wrap;
}

.stat {
    display: flex;
    align-items: center;
    gap: 8px;
    color: var(--text-secondary);
    font-weight: 500;
}

.stat i {
    color: var(--accent-color);
    font-size: 1.1rem;
}

/* Progress Indicator */
.progress-indicator {
    position: absolute;
    top: 30px;
    right: 30px;
    text-align: right;
}

.progress-bar {
    width: 200px;
    height: 8px;
    background: var(--border-color);
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 10px;
}

.progress-fill {
    height: 100%;
    background: var(--graphql-gradient);
    width: 0%;
    transition: width 0.3s ease;
    border-radius: 4px;
    animation: progressGlow 2s ease-in-out infinite;
}

@keyframes progressGlow {
    0%, 100% { box-shadow: 0 0 5px rgba(225, 0, 152, 0.3); }
    50% { box-shadow: 0 0 15px rgba(225, 0, 152, 0.6); }
}

.progress-text {
    color: var(--text-secondary);
    font-size: 0.9rem;
    font-weight: 500;
}

/* Exercise Cards */
.exercises-container {
    display: grid;
    gap: 25px;
    margin-bottom: 30px;
}

.exercise-card {
    background: var(--surface-color);
    border-radius: 15px;
    border: 1px solid var(--border-color);
    overflow: hidden;
    box-shadow: 0 5px 20px var(--shadow-color);
    transition: all 0.3s ease;
    position: relative;
}

.exercise-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 40px var(--shadow-color);
}

.exercise-card.completed {
    border-color: var(--success-color);
    box-shadow: 0 5px 20px rgba(79, 172, 254, 0.2);
}

.exercise-card.completed::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: var(--success-color);
}

.exercise-header {
    padding: 25px 30px;
    background: linear-gradient(135deg, rgba(225, 0, 152, 0.1) 0%, rgba(0, 212, 170, 0.1) 100%);
    border-bottom: 1px solid var(--border-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.exercise-header h3 {
    font-size: 1.4rem;
    color: var(--text-primary);
    display: flex;
    align-items: center;
    gap: 12px;
}

.exercise-header h3 i {
    font-size: 1.2rem;
}

/* GraphQL specific colors */
.exercise-card[data-exercise="1"] .exercise-header h3 i {
    color: var(--query-color);
}

.exercise-card[data-exercise="2"] .exercise-header h3 i {
    color: var(--mutation-color);
}

.exercise-card[data-exercise="3"] .exercise-header h3 i {
    color: var(--subscription-color);
}

.exercise-card[data-exercise="4"] .exercise-header h3 i {
    color: var(--api-color);
}

.exercise-card[data-exercise="5"] .exercise-header h3 i {
    color: var(--realtime-color);
}

.exercise-status {
    display: flex;
    align-items: center;
    gap: 8px;
    font-weight: 500;
}

.status-pending {
    color: var(--warning-color);
}

.status-completed {
    color: var(--success-color);
}

.status-in-progress {
    color: var(--accent-color);
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* Exercise Content */
.exercise-content {
    padding: 30px;
}

.exercise-description {
    margin-bottom: 25px;
}

.exercise-description p {
    color: var(--text-secondary);
    font-size: 1.1rem;
    line-height: 1.7;
    margin-bottom: 20px;
}

.exercise-hints {
    background: rgba(225, 0, 152, 0.1);
    border: 1px solid rgba(225, 0, 152, 0.3);
    border-radius: 10px;
    padding: 20px;
}

.exercise-hints h4 {
    color: var(--accent-color);
    margin-bottom: 15px;
    display: flex;
    align-items: center;
    gap: 8px;
}

.exercise-hints ul {
    list-style: none;
    padding-left: 0;
}

.exercise-hints li {
    color: var(--text-secondary);
    margin-bottom: 8px;
    padding-left: 20px;
    position: relative;
}

.exercise-hints li::before {
    content: 'ðŸ”—';
    position: absolute;
    left: 0;
    color: var(--accent-color);
}

/* Code Editor */
.code-editor {
    margin-bottom: 25px;
    border-radius: 10px;
    overflow: hidden;
    border: 1px solid var(--border-color);
}

.editor-header {
    background: var(--background-color);
    padding: 15px 20px;
    border-bottom: 1px solid var(--border-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.editor-header span {
    color: var(--text-primary);
    font-weight: 500;
    font-size: 1rem;
}

.run-btn {
    background: var(--graphql-gradient);
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 6px;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.run-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
}

.run-btn:hover::before {
    left: 100%;
}

.run-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(225, 0, 152, 0.4);
}

.run-btn:active {
    transform: translateY(0);
}

.editor-container {
    position: relative;
}

.editor-container textarea {
    width: 100%;
    height: 300px;
    background: #1e1e1e;
    color: #d4d4d4;
    border: none;
    padding: 20px;
    font-family: 'Fira Code', 'Monaco', 'Consolas', monospace;
    font-size: 14px;
    line-height: 1.5;
    resize: vertical;
    outline: none;
    tab-size: 2;
}

.editor-container textarea::placeholder {
    color: #6a6a6a;
}

/* Output Panel */
.output-panel {
    background: var(--background-color);
    border: 1px solid var(--border-color);
    border-radius: 10px;
    overflow: hidden;
}

.output-header {
    background: var(--surface-color);
    padding: 15px 20px;
    border-bottom: 1px solid var(--border-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.output-header span {
    color: var(--text-primary);
    font-weight: 500;
    font-size: 1rem;
}

.metrics {
    display: flex;
    gap: 20px;
    flex-wrap: wrap;
}

.metric {
    color: var(--text-secondary);
    font-size: 0.9rem;
    display: flex;
    align-items: center;
    gap: 5px;
}

.metric span {
    color: var(--accent-color);
    font-weight: 600;
}

.output-content {
    padding: 20px;
    min-height: 100px;
    color: var(--text-secondary);
    font-family: 'Fira Code', 'Monaco', 'Consolas', monospace;
    font-size: 14px;
    line-height: 1.5;
    white-space: pre-wrap;
    word-wrap: break-word;
}

/* GraphQL specific styles */
.graphql-result {
    display: inline-block;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.8rem;
    margin: 2px;
    font-weight: 600;
}

.query-executed {
    background: rgba(0, 212, 170, 0.1);
    color: var(--query-color);
    border: 1px solid rgba(0, 212, 170, 0.3);
}

.mutation-executed {
    background: rgba(255, 107, 107, 0.1);
    color: var(--mutation-color);
    border: 1px solid rgba(255, 107, 107, 0.3);
}

.subscription-active {
    background: rgba(102, 126, 234, 0.1);
    color: var(--subscription-color);
    border: 1px solid rgba(102, 126, 234, 0.3);
}

.api-endpoint {
    background: rgba(139, 92, 246, 0.1);
    color: var(--api-color);
    border: 1px solid rgba(139, 92, 246, 0.3);
}

.realtime-connected {
    background: rgba(79, 172, 254, 0.1);
    color: var(--realtime-color);
    border: 1px solid rgba(79, 172, 254, 0.3);
}

.data-synced {
    background: rgba(67, 233, 123, 0.1);
    color: var(--warning-color);
    border: 1px solid rgba(67, 233, 123, 0.3);
}

.optimized-query {
    background: rgba(79, 172, 254, 0.1);
    color: var(--success-color);
    border: 1px solid rgba(79, 172, 254, 0.3);
}

/* GraphQL query visualization */
.query-visualization {
    display: flex;
    gap: 10px;
    margin: 15px 0;
    padding: 15px;
    background: var(--surface-color);
    border-radius: 10px;
    border: 1px solid var(--border-color);
    overflow-x: auto;
}

.query-node {
    min-width: 80px;
    height: 60px;
    background: var(--query-color);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: bold;
    font-size: 0.8rem;
    position: relative;
    animation: queryProcessing 3s infinite;
}

.query-node::after {
    content: '';
    position: absolute;
    top: 50%;
    right: -15px;
    width: 10px;
    height: 2px;
    background: var(--accent-color);
    transform: translateY(-50%);
}

.query-node:last-child::after {
    display: none;
}

@keyframes queryProcessing {
    0%, 100% { 
        box-shadow: 0 0 5px rgba(0, 212, 170, 0.3);
        transform: scale(1);
    }
    50% { 
        box-shadow: 0 0 15px rgba(0, 212, 170, 0.8);
        transform: scale(1.05);
    }
}

/* Mutation visualization */
.mutation-pool {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 8px;
    margin: 15px 0;
    padding: 15px;
    background: var(--surface-color);
    border-radius: 10px;
    border: 1px solid var(--border-color);
}

.mutation-item {
    width: 100px;
    height: 50px;
    background: var(--mutation-color);
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.7rem;
    font-weight: bold;
    animation: mutationPending 2s infinite;
}

.mutation-item.executed {
    background: var(--success-color);
    animation: none;
}

.mutation-item.failed {
    background: var(--error-color);
    animation: none;
}

@keyframes mutationPending {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.6; }
}

/* Subscription visualization */
.subscription-demo {
    display: flex;
    gap: 15px;
    margin: 15px 0;
    padding: 15px;
    background: var(--surface-color);
    border-radius: 10px;
    border: 1px solid var(--border-color);
}

.subscription-channel {
    flex: 1;
    text-align: center;
    padding: 15px;
    background: var(--background-color);
    border-radius: 8px;
    border: 1px solid var(--border-color);
}

.channel-title {
    color: var(--text-secondary);
    font-size: 0.9rem;
    margin-bottom: 8px;
}

.channel-status {
    color: var(--accent-color);
    font-size: 1.2rem;
    font-weight: bold;
}

.channel-status.connected {
    color: var(--success-color);
}

.channel-status.disconnected {
    color: var(--error-color);
}

/* API endpoint visualization */
.api-endpoints {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 10px;
    margin: 15px 0;
    padding: 15px;
    background: var(--surface-color);
    border-radius: 10px;
    border: 1px solid var(--border-color);
}

.endpoint-item {
    padding: 10px;
    border-radius: 6px;
    font-size: 0.8rem;
    font-weight: bold;
    text-align: center;
}

.get-endpoint {
    background: var(--query-color);
    color: white;
}

.post-endpoint {
    background: var(--mutation-color);
    color: white;
}

.put-endpoint {
    background: var(--warning-color);
    color: white;
}

.delete-endpoint {
    background: var(--error-color);
    color: white;
}

/* Real-time data flow */
.data-flow {
    display: flex;
    gap: 10px;
    margin: 15px 0;
    padding: 15px;
    background: var(--surface-color);
    border-radius: 10px;
    border: 1px solid var(--border-color);
    overflow-x: auto;
}

.data-packet {
    min-width: 60px;
    height: 40px;
    background: var(--realtime-color);
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.7rem;
    font-weight: bold;
    animation: dataFlow 2s infinite;
}

.data-packet:nth-child(odd) {
    animation-delay: 0.5s;
}

@keyframes dataFlow {
    0%, 100% { transform: translateX(0); opacity: 1; }
    50% { transform: translateX(10px); opacity: 0.7; }
}

/* WebSocket connection status */
.connection-status {
    display: flex;
    gap: 15px;
    margin: 15px 0;
    padding: 15px;
    background: var(--surface-color);
    border-radius: 10px;
    border: 1px solid var(--border-color);
}

.connection-type {
    flex: 1;
    text-align: center;
    padding: 15px;
    background: var(--background-color);
    border-radius: 8px;
    border: 1px solid var(--border-color);
}

.connection-title {
    color: var(--text-secondary);
    font-size: 0.9rem;
    margin-bottom: 8px;
}

.connection-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin: 0 auto 8px;
    animation: connectionPulse 2s infinite;
}

.connection-indicator.connected {
    background: var(--success-color);
}

.connection-indicator.disconnected {
    background: var(--error-color);
}

.connection-indicator.connecting {
    background: var(--warning-color);
}

@keyframes connectionPulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* Level Actions */
.level-actions {
    display: flex;
    justify-content: center;
    gap: 20px;
    padding: 30px 0;
}

.btn-primary, .btn-secondary {
    padding: 12px 30px;
    border: none;
    border-radius: 8px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 8px;
    text-decoration: none;
    position: relative;
    overflow: hidden;
}

.btn-primary {
    background: var(--graphql-gradient);
    color: white;
}

.btn-primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
}

.btn-primary:hover:not(:disabled)::before {
    left: 100%;
}

.btn-primary:hover:not(:disabled) {
    transform: translateY(-3px);
    box-shadow: 0 10px 25px rgba(225, 0, 152, 0.4);
}

.btn-primary:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.btn-secondary {
    background: transparent;
    color: var(--text-secondary);
    border: 2px solid var(--border-color);
}

.btn-secondary:hover {
    background: var(--surface-color);
    color: var(--text-primary);
    border-color: var(--accent-color);
}

/* Responsive Design */
@media (max-width: 768px) {
    .level-container {
        padding: 15px;
    }
    
    .level-header {
        padding: 20px;
    }
    
    .level-info h1 {
        font-size: 2rem;
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
    
    .level-info h1::after {
        position: static;
        margin-top: 10px;
    }
    
    .progress-indicator {
        position: static;
        margin-top: 20px;
        text-align: left;
    }
    
    .progress-bar {
        width: 100%;
    }
    
    .level-stats {
        gap: 15px;
    }
    
    .exercise-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
    }
    
    .exercise-content {
        padding: 20px;
    }
    
    .editor-container textarea {
        height: 250px;
        font-size: 13px;
    }
    
    .metrics {
        flex-direction: column;
        gap: 10px;
    }
    
    .level-actions {
        flex-direction: column;
        align-items: center;
    }
    
    .btn-primary, .btn-secondary {
        width: 100%;
        justify-content: center;
    }
    
    .query-visualization {
        flex-wrap: wrap;
    }
    
    .subscription-demo {
        flex-direction: column;
    }
    
    .connection-status {
        flex-direction: column;
    }
    
    .data-flow {
        flex-wrap: wrap;
    }
}

@media (max-width: 480px) {
    .level-info h1 {
        font-size: 1.8rem;
    }
    
    .exercise-header h3 {
        font-size: 1.2rem;
    }
    
    .editor-container textarea {
        height: 200px;
        font-size: 12px;
    }
    
    .query-node {
        min-width: 60px;
        height: 50px;
    }
    
    .mutation-item {
        width: 80px;
        height: 40px;
    }
}

/* Animation for GraphQL processing */
@keyframes graphqlProcessing {
    0% { 
        transform: scale(1) rotate(0deg);
        opacity: 1;
    }
    50% { 
        transform: scale(1.1) rotate(180deg);
        opacity: 0.8;
    }
    100% { 
        transform: scale(1) rotate(360deg);
        opacity: 1;
    }
}

.graphql-processing {
    animation: graphqlProcessing 3s linear infinite;
}

/* Loading states */
.loading {
    position: relative;
    overflow: hidden;
}

.loading::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(225, 0, 152, 0.2), transparent);
    animation: loading 1.5s infinite;
}

@keyframes loading {
    0% { left: -100%; }
    100% { left: 100%; }
}

/* Success animations */
@keyframes successPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

.success-animation {
    animation: successPulse 0.6s ease-in-out;
}
